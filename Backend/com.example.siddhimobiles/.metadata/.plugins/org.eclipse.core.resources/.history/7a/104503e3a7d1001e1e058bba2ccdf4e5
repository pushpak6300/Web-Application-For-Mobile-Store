package com.example.siddhimobiles.controller;

import java.io.IOException;
import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.example.siddhimobiles.entity.Category;
import com.example.siddhimobiles.entity.Image;
import com.example.siddhimobiles.service.CategoryServices;
import com.example.siddhimobiles.service.ImageService;

@RestController
public class ImageController {
	@Autowired
	private ImageService imageService;

	@GetMapping("/image")
	public ResponseEntity<Collection<Image>> getAllImage() {
		return ResponseEntity.ok(imageService.getAllImages());
	}

	@GetMapping("/{imageId}")
	public ResponseEntity<Image> getOneImage(@PathVariable Long imageId) {
		Image foundImage = imageService.getOneImage(imageId);
		return foundImage != null ? ResponseEntity.ok(foundImage) : ResponseEntity.notFound().build();
	}
	
	@PostMapping("/upload")
	public ResponseEntity<?> uploadFile(@RequestParam("image_id") String imageId, @RequestParam("file") MultipartFile file) {
	    // Your logic here
	    return ResponseEntity.ok().body("File uploaded successfully");
	}


	// Updated method for uploading images
	@PostMapping("/upload/{id}")
	public ResponseEntity<?> uploadImage(@PathVariable Long id, @RequestParam("file") MultipartFile file) {
		try {
			imageService.saveImageFile(id, file);
			return ResponseEntity.ok("Image uploaded successfully");
		} catch (Exception e) {
			return ResponseEntity.badRequest().body("Failed to upload image: " + e.getMessage());
		}
	}

	@DeleteMapping("/{imageId}")
	public ResponseEntity<?> deleteOneImage(@PathVariable Long imageId) {
		try {
			imageService.deleteOneImage(imageId);
			return ResponseEntity.ok("Image deleted successfully");
		} catch (Exception e) {
			return ResponseEntity.badRequest().body("Failed to delete image: " + e.getMessage());
		}
	}

}
