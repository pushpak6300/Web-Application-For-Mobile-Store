package com.example.siddhimobiles.controller;

import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.FileSystemResource;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.example.siddhimobiles.entity.Product;
import com.example.siddhimobiles.service.ProductServices;

import io.jsonwebtoken.io.IOException;


@RestController
public class ProductController {
	@Autowired
	private ProductServices productServiceRef;
	
	public static String uploadDirectory ="C:\\Users\\Admin\\OneDrive\\Desktop\\Project\\Frontend\\project-Siddhi_Mobiles\\my-app\\public";

	@GetMapping("/products")
	public Collection<Product> getAllProduct() {
		Collection<Product> allProduct = productServiceRef.getAllProducts();
		return allProduct;
	}

	@GetMapping("/product/{productId}")
	public Product getOneProduct(@PathVariable("productId") Long id) {
		Product foundProduct = productServiceRef.getOneProduct(id);
		return foundProduct;
	}
	
	/*
	 * @GetMapping("/product/getProductImg/{id}") public ResponseEntity<Resource>
	 * getProfileImage(@PathVariable String id) throws IOException{ //Fetching thr
	 * room obj from repository by id Product product =
	 * productServiceRef.getOneProduct(id); //fetch the image from student obj Path
	 * imgPath =Paths.get(uploadDirectory, product.getProductImg()); //Here fetching
	 * the img from that particular path Resource resource = new
	 * FileSystemResource(imgPath.toFile()); //Here getting the content type of
	 * image String contentType = Files.probeContentType(imgPath); //then we parse
	 * the img to display/ return to postman return
	 * ResponseEntity.ok().contentType(MediaType.parseMediaType(contentType)).body(
	 * resource); }
	 */



	@PostMapping("/product")
	public Product addNewProduct(@ModelAttribute Product productRef,@RequestParam("product_img") MultipartFile file)throws java.io.IOException {
		String originalFilename =file.getOriginalFilename();
		Path fileNameAndPath = Paths.get(uploadDirectory,originalFilename);
		Files.write(fileNameAndPath, file.getBytes());
		productRef.setProductImg(originalFilename);
//		Product saveProductData = productServiceRef.addNewProduct(productRef);
//		System.out.println(productRef);
		return productServiceRef.addNewProduct(productRef);
		

	}

	@DeleteMapping("/product/{productId}")
	public void deleteOneProduct(@PathVariable("productId") Long id) {
		productServiceRef.deleteOneProduct(id);
	}
}
